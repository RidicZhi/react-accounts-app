{"version":3,"sources":["utils/RecordsAPI.js","components/Record.js","components/NewRecordForm.js","components/AmountBox.js","components/Records.js","serviceWorker.js","index.js"],"names":["api","process","REACT_APP_RECORDS_API_URL","Record","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","edit","handleEditingToggle","bind","assertThisInitialized","handleUpdate","handleDelete","setState","e","_this2","preventDefault","id","body","updatedRecord","date","refs","value","title","amount","Number","parseInt","record","axios","put","concat","then","res","onUpdateRecord","data","catch","err","console","log","message","_this3","delete","onDeleteRecord","_this$props$record","react_default","a","createElement","className","onClick","_this$props$record2","type","defaultValue","ref","returnEditingRow","returnRecordRow","Component","NewRecordForm","handleChange","handleSubmit","_this$state","_e$target","target","name","defineProperty","_this$state2","post","createRecord","onCreateRecord","_this$state3","onSubmit","onChange","placeholder","disabled","buttonValid","AmountBox","_ref","Records","records","error","isLoaded","get","newRecords","toConsumableArray","newRecord","map","item","objectSpread","filter","reduce","prev","curr","getIncome","getOutcome","recordsComponent","Record_Record","key","components_AmountBox","getBalance","NewRecordForm_NewRecordForm","Boolean","window","location","hostname","match","ReactDOM","render","components_Records","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cd6a6f17.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst api =\n  process.env.REACT_APP_RECORDS_API_URL ||\n  \"https://5cb5bfa207f233001424d6c5.mockapi.io/api/v1/records\";\n\nexport const getRecords = () => \n  axios.get(`${api}/api/v1/records`);\n\nexport const createRecord = (body) => \n  axios.post(`${api}/api/v1/records`, body);\n\nexport const updateRecord = (id, body) => \n  axios.put(`${api}/api/v1/records/${id}`, body);\n\nexport const deleteRecord = (id) => \n  axios.delete(`${api}/api/v1/records/${id}`);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { updateRecord, deleteRecord } from \"../utils/RecordsAPI\";\n\nexport default class Record extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      edit: false\n    };\n\n    this.handleEditingToggle = this.handleEditingToggle.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n  }\n\n  handleEditingToggle() {\n    this.setState({\n      edit: !this.state.edit\n    });\n  }\n\n  handleUpdate(e) {\n    e.preventDefault();\n\n    const updatedRecord = {\n      date: this.refs.date.value,\n      title: this.refs.title.value,\n      amount: Number.parseInt(this.refs.amount.value, 0)\n    };\n\n    updateRecord(this.props.record.id, updatedRecord)\n      .then(res => this.props.onUpdateRecord(this.props.record, res.data))\n      .catch(err => console.log(err.message));\n\n    this.handleEditingToggle();\n  }\n\n  handleDelete(e) {\n    e.preventDefault();\n\n    deleteRecord(this.props.record.id)\n      .then(res => {\n        this.props.onDeleteRecord(res.data);\n      })\n      .catch(err => console.log(err.message));\n  }\n\n  returnRecordRow() {\n    const { date, title, amount } = this.props.record;\n    return (\n      <tr>\n        <td className=\"align-middle\">{date}</td>\n        <td className=\"align-middle\">{title}</td>\n        <td className=\"align-middle\">{amount}</td>\n        <td>\n          <button\n            className=\"btn btn-info mr-3 btn-action\"\n            onClick={this.handleEditingToggle}\n          >\n            Edit\n          </button>\n          <button\n            className=\"btn btn-danger btn-action\"\n            onClick={this.handleDelete}\n          >\n            Delete\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  returnEditingRow() {\n    const { date, title, amount } = this.props.record;\n    return (\n      <tr>\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={date}\n            ref=\"date\"\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={title}\n            ref=\"title\"\n          />\n        </td>\n        <td>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            defaultValue={amount}\n            ref=\"amount\"\n          />\n        </td>\n        <td>\n          <button\n            className=\"btn btn-info mr-3 btn-action\"\n            onClick={this.handleUpdate}\n          >\n            Update\n          </button>\n          <button\n            className=\"btn btn-danger btn-action\"\n            onClick={this.handleEditingToggle}\n          >\n            Cancel\n          </button>\n        </td>\n      </tr>\n    );\n  }\n\n  render() {\n    const { edit } = this.state;\n\n    if (edit) {\n      return this.returnEditingRow();\n    }\n    return this.returnRecordRow();\n  }\n}\n\nRecord.propTypes = {\n  id: PropTypes.string,\n  date: PropTypes.string,\n  title: PropTypes.string,\n  amount: PropTypes.number\n};\n","import React, { Component } from \"react\";\nimport { createRecord } from \"../utils/RecordsAPI\";\n\nexport default class NewRecordForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      date: \"\",\n      title: \"\",\n      amount: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  buttonValid() {\n    const { date, title, amount } = this.state;\n\n    return !!(date && title && amount);\n  }\n\n  handleChange(e) {\n    const { name, value } = e.target;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { date, title, amount } = this.state;\n    const body = {\n      date,\n      title,\n      amount: Number.parseInt(amount, 0)\n    };\n\n    createRecord(body)\n      .then(res => {\n        this.props.onCreateRecord(res.data);\n        this.setState({\n          date: \"\",\n          title: \"\",\n          amount: \"\"\n        });\n      })\n      .catch(err => console.log(err.message));\n  }\n\n  render() {\n    const { date, title, amount } = this.state;\n\n    return (\n      <form\n        className=\"form-row my-5 justify-content-center\"\n        onSubmit={this.handleSubmit}\n      >\n        <div className=\"col-2 mr-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={this.handleChange}\n            placeholder=\"Date\"\n            name=\"date\"\n            value={date}\n          />\n        </div>\n        <div className=\"col-3 mr-4\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={this.handleChange}\n            placeholder=\"Title\"\n            name=\"title\"\n            value={title}\n          />\n        </div>\n        <div className=\"col-2 mr-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            onChange={this.handleChange}\n            placeholder=\"Amount\"\n            name=\"amount\"\n            value={amount}\n          />\n        </div>\n        <div>\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={!this.buttonValid()}\n          >\n            Create Record\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nconst AmountBox = ({ title, type , amount }) => {\n  return (\n    <div className=\"col amount-box\">\n      <div className=\"card\">\n        <div className={`card-header text-white bg-${type} text-center font-weight-bold`}>\n          {title}\n        </div>\n        <div className=\"card-body text-center font-weight-bold text-secondary\">\n          {amount}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AmountBox;","import React, { Component } from \"react\";\nimport Record from \"./Record\";\nimport { getRecords } from \"../utils/RecordsAPI\";\nimport NewRecordForm from \"./NewRecordForm\";\nimport AmountBox from \"./AmountBox\";\n\nclass Records extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      records: [],\n      error: null,\n      isLoaded: false\n    };\n\n    this.onCreateRecord = this.onCreateRecord.bind(this);\n    this.onUpdateRecord = this.onUpdateRecord.bind(this);\n    this.onDeleteRecord = this.onDeleteRecord.bind(this);\n  }\n\n  componentDidMount() {\n    getRecords()\n      .then(res => {\n        this.setState({\n          records: res.data,\n          isLoaded: true\n        });\n      })\n      .catch(error => {\n        this.setState({\n          error,\n          isLoaded: true\n        });\n      });\n  }\n\n  onCreateRecord(record) {\n    const { records } = this.state;\n    const newRecords = [...records, record];\n\n    this.setState({\n      records: newRecords\n    });\n  }\n\n  onUpdateRecord(record, newRecord) {\n    const { records } = this.state;\n\n    const newRecords = records.map(item => {\n      if (item.id !== record.id) {\n        return item;\n      }\n      return {\n        ...item,\n        ...newRecord\n      };\n    });\n\n    this.setState({\n      records: newRecords\n    });\n  }\n\n  onDeleteRecord(record) {\n    const { records } = this.state;\n\n    const newRecords = records.filter(item => item.id !== record.id);\n\n    this.setState({\n      records: newRecords\n    });\n  }\n\n  getIncome() {\n    let incomeRecordArray = this.state.records.filter(record => {\n      return record.amount >= 0;\n    });\n\n    return incomeRecordArray.reduce((prev, curr) => {\n      return prev + curr.amount;\n    }, 0);\n  }\n\n  getOutcome() {\n    let incomeRecordArray = this.state.records.filter(record => {\n      return record.amount <= 0;\n    });\n\n    return incomeRecordArray.reduce((prev, curr) => {\n      return prev + curr.amount;\n    }, 0);\n  }\n\n  getBalance() {\n    return this.getIncome() + this.getOutcome();\n  }\n\n  render() {\n    const { records, error, isLoaded } = this.state;\n    let recordsComponent;\n\n    if (error) {\n      recordsComponent = (\n        <div className=\"loading-message loading-error-message\">\n          Error: {error.message}\n        </div>\n      );\n    } else if (!isLoaded) {\n      recordsComponent = <div className=\"loading-message\">Loading...</div>;\n    } else {\n      recordsComponent = (\n        <table className=\"table table-bordered text-center \">\n          <thead className=\"thead-dark\">\n            <tr>\n              <th className=\"w-25\">Date</th>\n              <th className=\"w-25\">Title</th>\n              <th className=\"w-25\">Amount</th>\n              <th className=\"w-25\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {records.map(record => (\n              <Record\n                key={record.id}\n                record={record}\n                onUpdateRecord={this.onUpdateRecord}\n                onDeleteRecord={this.onDeleteRecord}\n              />\n            ))}\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <div className=\"mx-5 px-5\">\n        <h2 className=\"my-4 bg-primary text-white text-center\">Accounts App</h2>\n        <div className=\"row mb-3\">\n          <AmountBox title=\"Income\" type=\"success\" amount={this.getIncome()} />\n          <AmountBox title=\"Outcome\" type=\"danger\" amount={this.getOutcome()} />\n          <AmountBox title=\"Balance\" type=\"info\" amount={this.getBalance()} />\n        </div>\n        <NewRecordForm onCreateRecord={this.onCreateRecord} />\n        {recordsComponent}\n      </div>\n    );\n  }\n}\n\nexport default Records;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Records from './components/Records';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Records />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}